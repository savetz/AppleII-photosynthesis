════════════════════════════════════════   SCREEN 043
( load block FPA         <12/20/85> 43) 
FORTH DEFINITIONS                       
                                        
PAGE 2BEEP 2BEEP 2BEEP                  
." Place FPA disk in drive B " CR       
." and press any key to continue. "     
?TERMINAL DROP KEY DROP                 
                                        
0 FWARNING !   \ disable "FWD CALL" msg 
                                        
   64     LOAD    \ set up virtual      
                                        
   10 ONB LOAD    \ load FPA            
                                        
   LOADTRANSLATOR                       
   ADDDECOMPILER                        
                                        
   65     LOAD    \ write virtual       
                                        
1 FWARNING !                            
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 044
( load block LDR & MLDR  <12/20/85> 44) 
FORTH DEFINITIONS                       
                                        
   66 67 THRU  \ create LOADER          
                                        
   68 69 THRU  \ create MLOADER         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 055
( allocate virtuals      <12/21/85> 55) 
FORTH DEFINITIONS                       
                                        
SECS/TRK TRKS/HD * 1-  NEXT-SECTOR !    
                                        
HEX   800  NEXT-AUX !                   
                                        
A&E   SETPARMS                          
UTIL  SETPARMS                          
FPA   SETPARMS                          
LDR   SETPARMS                          
MLDR  SETPARMS                          
                                        
                                        
APPENDIX                                
                                        
FORGET SETPARMS                         
                                        
DECIMAL MAIN                            
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 056
( @RWTS-PARAM ?RESIDENT  <12/21/85> 56) 
APPENDIX                                
VIRTUAL DEFINITIONS                     
                                        
\ These words assume that VP is set.    
                                        
: @RWTS-PARAM ( -- addr hd dr sec trk ) 
   VIR-BASE 6 VDRIVE                    
   VIR-SEC @ VIR-TRK @ ;                
                                        
: ?RESIDENT ( addr -- 0/1 )             
   D@ VIR-FLG @ VIR-TST @ D= ;          
                                        
: VIR-RES? ( -- )                       
   VIR-BASE ?RESIDENT NOT               
   IF CR                                
     ." WRONG DISK -- NO VIRTUAL IMAGE" 
     <FORGET-SYS> QUIT                  
   THEN ;                               
                                        
FORTH DEFINITIONS MAIN                  
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 057
( V@AUX V!AUX <GET-VIR>  <12/21/85> 57) 
APPENDIX                                
                                        
\ These words assume that VP is set.    
                                        
VIRTUAL DEFINITIONS                     
                                        
: V@AUX ( read vir from aux mem )       
   1 AUX-ADDR @ 0 VIR-BASE              
   VIR-SIZE @ CMOVEL ;                  
                                        
: V!AUX ( write vir to aux mem )        
   0 VIR-BASE 1 AUX-ADDR @              
   VIR-SIZE @ CMOVEL ;                  
                                        
: <GET-VIR> ( read vir from disk )      
   <FORGET-SYS>                         
   @RWTS-PARAM 1 VIR-SECTS @ RWTS ;     
                                        
: <PUT-VIR> ( write vir to disk )       
   @RWTS-PARAM 0 VIR-SECTS @ RWTS ;     
                                        
FORTH DEFINITIONS MAIN                  
                               ( bobp ) 
════════════════════════════════════════   SCREEN 058
( GET-VIR                <12/21/85> 58) 
APPENDIX                                
VIRTUAL DEFINITIONS                     
                                        
\ These words assume that VP is set.    
                                        
: GET-VIR                               
   NOOP                                 
   SYS-FLG @ VIR-FLG @ = NOT            
   IF <FORGET-SYS>  ?AUX                
      IF V@AUX                          
         VIR-BASE ?RESIDENT NOT         
         IF <GET-VIR> V!AUX THEN        
      ELSE <GET-VIR> THEN               
   THEN  VIR-RES?                       
   SYS-LINK1 FIRSTLFA @ !               
   LASTLFA @ SYS-LINK2 !                
   VIR-FLG @ SYS-FLG ! ;                
                                        
FORTH DEFINITIONS                       
MAIN                                    
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 059
( GET-A&E etc.           <12/21/85> 59) 
APPENDIX                                
FORTH DEFINITIONS                       
                                        
\ These words set VP.                   
                                        
                                        
: GET-A&E  NOOP A&E GET-VIR ;           
                                        
: GET-UTIL NOOP UTIL GET-VIR ;          
                                        
: GET-FPA  NOOP                         
   FPA VIR-FLG @ IF GET-VIR THEN ;      
                                        
: GET-LOADER NOOP LDR GET-VIR ;         
                                        
                                        
: GET-MLOADER NOOP MLDR GET-VIR ;       
                                        
MAIN EXIT                               
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 060
( make virtual:  A&E     <12/21/85> 60) 
MAIN DECIMAL                            
FORTH DEFINITIONS                       
                                        
\ save system status                    
  FORGET-SYS FREEZE                     
                                        
A&E     \ set virtual parameter pointer 
                                        
\ switch to virtual mem                 
  VIR-BASE DP !                         
\ fill with A's                         
  VIR-BASE 8192 65 FILL                 
\ compile check words                   
  VIR-FLG @ VIR-TST @ , , 0 ,           
\ dummy definition for lfa              
  CREATE _ SMUDGE                       
\ remember first LFA                    
  LATEST PFA-LFA  FIRSTLFA !            
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 061
( write virtual: A&E     <12/21/85> 61) 
FORTH DEFINITIONS                       
                                        
  A&E                                   
\ remember last LFA and DP              
  LATEST PFA-LFA  LASTLFA !             
  HERE SAVE-VDP !                       
\ restore system status                 
  ICEBOX @ VOC-LINK !                   
  ICEBOX 2+ @ DP !                      
  ICEBOX 4 + @ CONTEXT @ !              
\ unhook then re-install normally       
  FORGET-SYS                            
                                        
  A&E                                   
  VIR-FLG @ SYS-FLG !                   
  SYS-LINK1 FIRSTLFA @ !                
  LASTLFA @ SYS-LINK2 !                 
  <PUT-VIR>    \ write to disk          
  V!AUX        \ copy to aux bank       
  FORGET-SYS                            
                                        
CR CR ." A&E written" CR CR             
                               ( bobp ) 
════════════════════════════════════════   SCREEN 062
( make virtual:  UTIL    <12/21/85> 62) 
MAIN DECIMAL                            
FORTH DEFINITIONS                       
                                        
\ save system status                    
  FORGET-SYS FREEZE                     
                                        
UTIL    \ set virtual parameter pointer 
                                        
\ switch to virtual mem                 
  VIR-BASE DP !                         
\ fill with B's                         
  VIR-BASE 8192 66 FILL                 
\ compile check words                   
  VIR-FLG @ VIR-TST @ , , 0 ,           
\ dummy definition for lfa              
  CREATE _ SMUDGE                       
\ remember first LFA                    
  LATEST PFA-LFA  FIRSTLFA !            
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 063
( write virtual: UTIL    <12/21/85> 63) 
FORTH DEFINITIONS                       
                                        
  UTIL                                  
\ remember last LFA and DP              
  LATEST PFA-LFA  LASTLFA !             
  HERE SAVE-VDP !                       
\ restore system status                 
  ICEBOX @ VOC-LINK !                   
  ICEBOX 2+ @ DP !                      
  ICEBOX 4 + @ CONTEXT @ !              
\ unhook then re-install normally       
  FORGET-SYS                            
                                        
  UTIL                                  
  VIR-FLG @ SYS-FLG !                   
  SYS-LINK1 FIRSTLFA @ !                
  LASTLFA @ SYS-LINK2 !                 
  <PUT-VIR>    \ write to disk          
  V!AUX        \ copy to aux bank       
  FORGET-SYS                            
                                        
CR CR ." UTIL written" CR CR            
                               ( bobp ) 
════════════════════════════════════════   SCREEN 064
( make virtual:  FPA     <12/21/85> 64) 
MAIN DECIMAL                            
FORTH DEFINITIONS                       
                                        
\ save system status                    
  FORGET-SYS FREEZE                     
                                        
FPA     \ set virtual parameter pointer 
                                        
\ switch to virtual mem                 
  VIR-BASE DP !                         
\ fill with C's                         
  VIR-BASE 8192 67 FILL                 
\ compile check words                   
  VIR-FLG @ VIR-TST @ , , 0 ,           
\ dummy definition for lfa              
  CREATE _ SMUDGE                       
\ remember first LFA                    
  LATEST PFA-LFA  FIRSTLFA !            
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 065
( write virtual: FPA     <12/21/85> 65) 
FORTH DEFINITIONS                       
                                        
  FPA                                   
\ remember last LFA and DP              
  LATEST PFA-LFA  LASTLFA !             
  HERE SAVE-VDP !                       
\ restore system status                 
  ICEBOX @ VOC-LINK !                   
  ICEBOX 2+ @ DP !                      
  ICEBOX 4 + @ CONTEXT @ !              
\ unhook then re-install normally       
  FORGET-SYS                            
                                        
  FPA                                   
  VIR-FLG @ SYS-FLG !                   
  SYS-LINK1 FIRSTLFA @ !                
  LASTLFA @ SYS-LINK2 !                 
  <PUT-VIR>    \ write to disk          
  V!AUX        \ copy to aux bank       
  FORGET-SYS                            
                                        
CR CR ." FPA written" CR CR             
                               ( bobp ) 
════════════════════════════════════════   SCREEN 066
( make virtual:  LOADER  <12/21/85> 66) 
MAIN DECIMAL                            
FORTH DEFINITIONS                       
                                        
\ save system status                    
  FORGET-SYS FREEZE                     
                                        
LDR     \ set virtual parameter pointer 
                                        
\ switch to virtual mem                 
  VIR-BASE DP !                         
\ fill with D's                         
  VIR-BASE 8192 68 FILL                 
\ compile check words                   
  VIR-FLG @ VIR-TST @ , , 0 ,           
\ dummy definition for lfa              
  CREATE _ SMUDGE                       
\ remember first LFA                    
  LATEST PFA-LFA  FIRSTLFA !            
                                        
\ make real LOADER vocabulary           
  VOCABULARY LDR-VOC IMMEDIATE          
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 067
( write virtual: LOADER  <12/21/85> 67) 
FORTH DEFINITIONS                       
                                        
  LDR                                   
\ remember last LFA and DP              
  LATEST PFA-LFA  LASTLFA !             
  HERE SAVE-VDP !                       
\ restore system status                 
  ICEBOX @ VOC-LINK !                   
  ICEBOX 2+ @ DP !                      
  ICEBOX 4 + @ CONTEXT @ !              
\ unhook then re-install normally       
  FORGET-SYS                            
                                        
  LDR                                   
  VIR-FLG @ SYS-FLG !                   
  SYS-LINK1 FIRSTLFA @ !                
  LASTLFA @ SYS-LINK2 !                 
  <PUT-VIR>    \ write to disk          
  V!AUX        \ copy to aux bank       
  FORGET-SYS                            
                                        
CR CR ." LOADER written" CR CR          
                               ( bobp ) 
════════════════════════════════════════   SCREEN 068
( make virtual:  MLOADER <12/21/85> 68) 
MAIN DECIMAL                            
FORTH DEFINITIONS                       
                                        
\ save system status                    
  FORGET-SYS FREEZE                     
                                        
MLDR    \ set virtual parameter pointer 
                                        
\ switch to virtual mem                 
  VIR-BASE DP !                         
\ fill with E's                         
  VIR-BASE 8192 69 FILL                 
\ compile check words                   
  VIR-FLG @ VIR-TST @ , , 0 ,           
\ dummy definition for lfa              
  CREATE _ SMUDGE                       
\ remember first LFA                    
  LATEST PFA-LFA  FIRSTLFA !            
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 069
( write virtual: MLOADER <12/21/85> 69) 
FORTH DEFINITIONS                       
                                        
  MLDR                                  
\ remember last LFA and DP              
  LATEST PFA-LFA  LASTLFA !             
  HERE SAVE-VDP !                       
\ restore system status                 
  ICEBOX @ VOC-LINK !                   
  ICEBOX 2+ @ DP !                      
  ICEBOX 4 + @ CONTEXT @ !              
\ unhook then re-install normally       
  FORGET-SYS                            
                                        
  MLDR                                  
  VIR-FLG @ SYS-FLG !                   
  SYS-LINK1 FIRSTLFA @ !                
  LASTLFA @ SYS-LINK2 !                 
  <PUT-VIR>    \ write to disk          
  V!AUX        \ copy to aux bank       
  FORGET-SYS                            
                                        
CR CR ." MLOADER written" CR CR         
                               ( bobp ) 
════════════════════════════════════════   SCREEN 070
( <@APPENDIX>            <12/21/85> 70) 
ONLY FORTH VIRTUAL ALSO                 
  FORTH ALSO DEFINITIONS                
                                        
HEX MAIN                                
                                        
9000 CONSTANT APP-AUX                   
                                        
DVARIABLE APP-TEST                      
   E000 @ F000 @ APP-TEST D!            
                                        
DECIMAL                                 
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 071
( <@APPENDIX>            <12/21/85> 71) 
MAIN                                    
ONLY FORTH ALSO DEFINITIONS             
HEX                                     
\ should only be used after <!APPENDIX> 
                                        
: <@APPENDIX>                           
   R2-W2                                
   E000 @ F000 @ APP-TEST D@ D= NOT     
   IF ?AUX                              
      IF 1 APP-AUX 0 E000 2000 CMOVEL   
   THEN THEN                            
   E000 @ F000 @ APP-TEST D@ D= NOT     
   ?AUX NOT OR                          
   IF D000 6 0 8 2 1 20 RWTS            
      APP-SECTS @                       
      IF F000 6 0 SYS-SECTS @ 10 +      
         SECS/TRK /MOD                  
         1 APP-SECTS @ RWTS             
   THEN THEN                            
   E000 @ F000 @ APP-TEST D! ;          
                                        
DECIMAL                                 
                               ( bobp ) 
════════════════════════════════════════   SCREEN 072
( <!APPENDIX>            <12/21/85> 72) 
\ I suspect it will be too dangerous    
\ to copy the appendix out to disk;     
\ if you are using a ][ or a ][+ , you  
\ will lose any changes you have made   
\ to the appendix.                      
                                        
HEX APPENDIX                            
                                        
: <!APPENDIX>                           
   R2-W2                                
   E000 @ F000 @ APP-TEST D!            
   ?AUX                                 
   IF 0 E000 1 APP-AUX                  
      2000 CMOVEL                       
   THEN ;                               
                                        
DECIMAL MAIN                            
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 075
( READ-VIRS              <12/21/85> 75) 
APPENDIX                                
ONLY FORTH VIRTUAL ALSO                 
  FORTH ALSO DEFINITIONS                
                                        
: ?VR 46 EMIT VIR-BASE ?RESIDENT NOT ;  
: NF ." not found " ;                   
                                        
: READ-VIRS                             
   ?2E NOT IF EXIT THEN                 
   CR ." Reading virtual images "       
   A&E <GET-VIR> V!AUX                  
   ?VR IF CR ." A&E " NF THEN           
   UTIL <GET-VIR> V!AUX                 
   ?VR IF CR ." UTIL " NF THEN          
   FPA <GET-VIR> V!AUX                  
   ?VR IF CR ." FPA " NF THEN           
   LDR <GET-VIR> V!AUX                  
   ?VR IF CR ." LOADER " NF THEN        
   MLDR <GET-VIR> V!AUX                 
   ?VR IF CR ." MLOADER " NF THEN       
   <!APPENDIX> GET-A&E CR CR ;          
                                        
ONLY FORTH ALSO  MAIN          ( bobp ) 
════════════════════════════════════════   SCREEN 076
( <LOGO>                 <12/27/85> 76) 
APPENDIX                                
                                        
: <LOGO>                                
   PAGE                                 
   ." PAI Forth version 3.00 "          
   MONTH @ DAY @ YEAR @ ]               
   LITERAL LITERAL LITERAL              
   0 .R 45 EMIT 0 .R 45 EMIT 0 .R       
   ." (rlp)" CR ;                       
                                        
                                        
' <LOGO> CFA      ' LOGO !              
' READ-VIRS CFA   ' START-SYS !         
                                        
MAIN                                    
EXIT                                    
   ." OpDB version 3.10A "              
   [ MONTH @ DAY @ YEAR @ ]             
   LITERAL LITERAL LITERAL              
   0 .R 45 EMIT 0 .R 45 EMIT 0 .R       
   ."  (fah) " CR ;                     
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 077
( A&E hooks              <12/21/85> 77) 
APPENDIX  GET-A&E                       
                                        
: CODE                                  
   GET-A&E [ ASSEMBLER ' CODE CFA ]     
   LITERAL FORTH EXECUTE ; IMMEDIATE    
                                        
: ;CODE                                 
   GET-A&E [ ASSEMBLER ' ;CODE CFA ]    
   LITERAL FORTH EXECUTE ; IMMEDIATE    
                                        
: EDIT ( scr -- )                       
   MAIN ?NUM GET-A&E                    
   [ EDITOR ' EDIT CFA ]                
   LITERAL EXECUTE ;                    
                                        
: SCRHDS GET-A&E                        
   [ EDITOR ' SCRHDS CFA ]              
   LITERAL EXECUTE ;                    
                                        
: ED EDIT ;                             
: EL SCR @ EDIT ;                       
                                        
MAIN                           ( bobp ) 
════════════════════════════════════════   SCREEN 078
( UTIL hooks             <12/21/85> 78) 
APPENDIX GET-UTIL                       
                                        
: COPYSCRNS  MAIN GET-UTIL              
   [ ' COPYSCRNS CFA ]                  
   LITERAL EXECUTE ;                    
: ERASESCRNS  MAIN GET-UTIL             
   [ ' ERASESCRNS CFA ]                 
   LITERAL EXECUTE ;                    
                                        
: DUMP  GET-UTIL [ ' DUMP CFA ]         
   LITERAL EXECUTE ;                    
: INDEX  GET-UTIL [ ' INDEX CFA ]       
   LITERAL EXECUTE ;                    
: 4LST  GET-UTIL [ ' 4LST CFA ]         
   LITERAL EXECUTE ;                    
                                        
: CASE  GET-UTIL [ ' CASE CFA ]         
   LITERAL EXECUTE ; IMMEDIATE          
: IT    GET-UTIL [ ' <IT> CFA ]         
   LITERAL EXECUTE ; IMMEDIATE          
                                        
MAIN                                    
                               ( bobp ) 
════════════════════════════════════════   SCREEN 080
( TEXT HG 1HG HGR CLS    <12/21/85> 80) 
HEX MAIN                                
                                        
CODE TEXT   \ switch to text screen     
      C051 LDA,                         
      NEXT JMP, C;                      
                                        
CODE HG     \ switch to graphics screen 
      C052 LDA, C050 LDA,               
      C054 LDA, C057 LDA,               
      NEXT JMP, C;                      
                                        
CODE 1HG    \ mixed graphics and text   
      C053 LDA, C050 LDA,               
      ' HG 6 + JMP, C;                  
                                        
: CLS FORGET-SYS                        
      2000 2000 0 FILL ;                
                                        
: HGR CLS HG ;                          
                                        
DECIMAL                                 
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 081
( TONE                   <12/21/85> 81) 
MAIN                                    
                                        
CODE <TONE>  2 # LDA, SETUP JSR,        
   N 3 + INC, N 1+ INC,                 
   BEGIN, N 3 + LDA, N 4 + STA,         
    N 2+ LDY, 49200 LDA,                
      BEGIN, DEY, 0=                    
         IF, N 4 + DEC,                 
         THEN, 0=                       
      UNTIL, N DEC, 0=                  
      IF, N 1+ DEC,                     
      THEN, 0=                          
   UNTIL, NEXT JMP, C;                  
                                        
: TONE ( freq,hz duration,1/100sec -- ) 
   68500. 4 ROLL U/MOD SWAP DROP        
   SWAP 1278 3 PICK 3 + */ <TONE> ;     
                                        
EXIT                                    
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 082
( TO REVECTOR            <12/21/85> 82) 
MAIN                                    
                                        
: <TO>   R> DUP 2+ >R @ ! ;             
                                        
APPENDIX                                
                                        
: TO                                    
   ?FIND DROP  STATE @                  
   IF COMPILE <TO>  ,                   
   ELSE  !  THEN ;                      
   IMMEDIATE                            
                                        
: REVECTOR                              
   ?FIND DROP CFA                       
   [COMPILE] LITERAL ;                  
   IMMEDIATE                            
                                        
: INTO [COMPILE] TO ; IMMEDIATE         
                                        
MAIN EXIT                               
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 085
( :$ .$ ;$ N$ N$.        <12/21/85> 85) 
APPENDIX                                
                                        
: :$  VARIABLE HERE 2- ;                
: .$  1 OVER +! 36 WORD C@ 1+ ALLOT ;   
: ;$  DROP ;                            
                                        
MAIN                                    
                                        
( : FIRSTSUB$  2+ ;         )           
( : NEXTSUB$  DUP C@ + 1+ ; )           
                                        
: N$  OVER OVER @ > 3 PICK 1 < OR       
     IF DROP DROP 0                     
     ELSE ( FIRSTSUB$ ) 2+ SWAP 1 -     
        ?DUP IF 0                       
           DO ( NEXTSUB$ ) DUP C@ + 1+  
           LOOP                         
        THEN 1                          
     THEN ;                             
                                        
: N$. N$ IF COUNT TYPE THEN ;           
EXIT                                    
                               ( bobp ) 
════════════════════════════════════════   SCREEN 086
( XWORD NOTES            <12/21/85> 86) 
                                        
EXIT                                    
                                        
any word that is preceeded by an "X"    
is a split head word you should use     
X' to find the address of the word      
in the main dictionary, using ' will    
return the address of the head          
                                        
Do not use DOES with X: as it will      
get confused and do the wrong thing     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 097
( @BIT !BIT              <12/21/85> 97) 
MAIN                                    
\ "Offset" can be any unsigned number.  
\ Note backwards syntax for !BIT .      
                                        
CODE @BIT ( addr offset -- 0/1 )        
   X' &BIT JSR,                         
   0 X) AND,                            
   0= NOT IF, INY, THEN,                
   TYA, PHA, 0 # LDA, PUT JMP, C;       
                                        
CODE !BIT ( addr offset 0/1 -- )        
   BOT LDA, BOT 1+ ORA,                 
   PHP, ( save flag)                    
   INX, INX,                            
   X' &BIT JSR,                         
   PLP, 0=                              
      IF, # 255 EOR, 0 X) AND,          
      ELSE, 0 X) ORA, THEN,             
   0 X) STA, POP JMP, C;                
                                        
FORGET &BIT                             
EXIT                                    
                               ( bobp ) 
════════════════════════════════════════   SCREEN 098
( ?EXIT ?LEAVE           <12/21/85> 98) 
                                        
: ?EXIT  IF R> DROP THEN ;              
                                        
: ?LEAVE IF R> LEAVE >R THEN ;          
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 099
( DECOMPILE              <12/21/85> 99) 
APPENDIX                                
                                        
GET-FPA                                 
                                        
: DECOMPILE GET-FPA [ ' DECOMPILE       
   CFA ] LITERAL EXECUTE ;              
                                        
MAIN                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 100
( <@APPENDIX>            <12/21/85>100) 
ONLY FORTH VIRTUAL ALSO                 
  FORTH ALSO DEFINITIONS  MAIN          
                                        
HEX                                     
                                        
NEXT-AUX @ CONSTANT APP-AUX             
2000 NEXT-AUX +!                        
                                        
DVARIABLE APP-TEST                      
   E000 @ F000 @ APP-TEST D!            
                                        
DECIMAL                                 
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 101
( <@APPENDIX>            <12/21/85>101) 
ONLY FORTH VIRTUAL ALSO                 
  FORTH ALSO DEFINITIONS  MAIN          
HEX                                     
\ should only be used after <!APPENDIX> 
                                        
: <@APPENDIX>                           
   R2-W2                                
   E000 @ F000 @ APP-TEST D@ D= NOT     
   IF ?AUX                              
      IF 1 APP-AUX 0 E000 2000 BMOVE    
      THEN                              
      E000 @ F000 @ APP-TEST D@ D= NOT  
      ?AUX NOT OR                       
      IF D000 6 0 8 2 1 20 RWTS         
         APP-SECTS @                    
         IF F000 6 0 SYS-SECTS @ 10 +   
            SECS/TRK /MOD               
            1 APP-SECTS @ RWTS          
   THEN THEN THEN                       
   E000 @ F000 @ APP-TEST D! ;          
                                        
DECIMAL                                 
                               ( bobp ) 
════════════════════════════════════════   SCREEN 102
( <!APPENDIX>            <12/21/85>102) 
\ I suspect it will be too dangerous    
\ to copy the appendix out to disk;     
\ if you are using a ][ or a ][+ , you  
\ will lose any changes you have made   
\ to the appendix.                      
HEX                                     
                                        
: <!APPENDIX>                           
   R2-W2                                
   E000 @ F000 @ APP-TEST D!            
   ?AUX                                 
   IF 0 E000 1 APP-AUX                  
      2000 BMOVE                        
   THEN ;                               
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
════════════════════════════════════════   SCREEN 131
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
